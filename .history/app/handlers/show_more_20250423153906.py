from aiogram.types import CallbackQuery
from aiogram import Router, F
from app.database.session import SessionLocal
from app.repositories.post import PostRepository
from app.services.post_service import get_paginated_posts_text
from app.utils.keyboard_helpers import build_menu_2_buttons
from app.utils.show_text import show_text
from aiogram.fsm.context import FSMContext

router = Router()


@router.callback_query(F.data.startswith("show_more:"))
async def handle_show_more(callback:CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë" –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–ª–µ–¥—É—é—â—É—é –ø–æ—Ä—Ü–∏—é –ø–æ—Å—Ç–æ–≤.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏—é: –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏–∑ callback.data —Å–º–µ—â–µ–Ω–∏–µ (offset), 
    –ø–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ 5 –ø–æ—Å—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –≤ —á–∞—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É
    –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ª–∏—Å—Ç–∞–Ω–∏—è (–µ—Å–ª–∏ –ø–æ—Å—Ç—ã –µ—Å—Ç—å).
    :param callback: –û–±—ä–µ–∫—Ç CallbackQuery –æ—Ç Telegram.
    :param state: –ö–æ–Ω—Ç–µ–∫—Å—Ç FSM-—Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await state.clear()
    try:
        offset = int(callback.data.split(":")[1])
    except (IndexError, ValueError):
        await callback.message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞")
        return
    async with SessionLocal() as session:
        text, has_more = await get_paginated_posts_text(session, offset)

        if not text:
            await callback.message.answer("‚ö†Ô∏è –ë–æ–ª—å—à–µ –ø–æ—Å—Ç–æ–≤ –Ω–µ—Ç")
            return

        buttons = build_menu_2_buttons("üì© –ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë", f"show_more:{offset+5}") if has_more else None
    await callback.message.answer(text, reply_markup=buttons)



        text, has_more = await get_paginated_posts_text(session, offset)


        await get_paginated_posts_text(session, offset)
        repo = PostRepository(session)
        posts = await repo.get_posts_paginated(offset=offset)

        if not posts:
            await callback.message.answer("‚ö†Ô∏è –ë–æ–ª—å—à–µ –ø–æ—Å—Ç–æ–≤ –Ω–µ—Ç")
            return

        text = show_text(posts)
            
        if len(posts) == 5:
            buttons = build_menu_2_buttons(text="üì© –ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë", callback_data=f"show_more:{offset+5}")
        else:
            text ='–≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã!\n\n '+text
            buttons = None     

        await callback.message.answer(text,reply_markup= buttons)
            

