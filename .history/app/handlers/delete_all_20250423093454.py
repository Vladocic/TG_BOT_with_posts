from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, Message
from aiogram import Router,F
from aiogram.fsm.context import FSMContext
from app.models.post import Post
from app.repositories.post import PostRepository
from app.states.post_states import AddPostState,AllDeleteState
from app.database.session import SessionLocal
from app.utils.keyboard_helpers import build_menu_keyboard

router = Router()


@router.callback_query(F.data == "delete_all")
async def delete_all_posts(callback:CallbackQuery, state:FSMContext):
    await callback.message.answer("–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤—Å–µ —É–¥–∞–ª–∏—Ç—å? –ù–∞–ø—à–∏–∏—Ç–µ '–î–∞'")
    await state.set_state(AllDeleteState.waiting_for_all_delete)


@router.message(AllDeleteState.waiting_for_all_delete)
async def aprove_delete(message:Message, state:FSMContext):
    correct_answer = ['–¥–∞', '–î–∞', 'ok', 'yes', 'Yes']
    button = 
    InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üè† –í –º–µ–Ω—é", callback_data="back_to_menu")]
        ])
    if message.text not in correct_answer:
        await message.answer("–í—ã –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ, –Ω–∞–ø–∏—â–∏—Ç–µ '–î–∞', –µ—â–µ —Ä–∞–∑", reply_markup= button)
        return

    async with SessionLocal() as session:
        repo = PostRepository(session)
        result = await repo.del_all_posts()

        text = '–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã' if result else '–£–¥–∞–ª–µ–Ω–∏—è –Ω–µ –ø—Ä–æ–∑–æ—à–ª–æ, —Ç–∞–±–ª–∏—Ü–∞ –±—ã–ª–∞ –ø—É—Å—Ç–∞.'
        await message.answer(text, button)
        await state.clear()